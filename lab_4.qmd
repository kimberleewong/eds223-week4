---
title: "Lab 4"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
install.packages("geodata")
library(terra)
library(tidyverse)
library(kableExtra)
library(tmap)
library(spData)
library(geodata)
library(spDataLarge)
```

```{r}
zion_elev <- rast(system.file("raster/srtm.tif", package = "spDataLarge"))

zion_land <- rast(system.file("raster/nlcd.tif", package = "spDataLarge"))
```

```{r}
tm_shape(zion_elev) +
  tm_raster(title = "Elevation (m)")

tm_shape(zion_land) +
  tm_raster(title = "Land cover")
```

```{r}
landsat <- rast(system.file("raster/landsat.tif", package = "spDataLarge"))
```

```{r}
tm_shape(landsat) +
  tm_raster()
```

```{r}
landsat3 <- subset(landsat, 3)

# does the same thing, is using its name
landsat3 <- subset(landsat, "landsat_3")
```

```{r}
global(zion_elev, mean)
freq(zion_land)
```

## Indexing

```{r}
# can update the info after picking the cell
zion_elev[1, 1] <- 0
zion_elev[1]

landsat[1] <- 1
landsat[1]

test_raster <- zion_elev
test_raster[test_raster < 20] <- NA
```

## Spatial Subsetting
```{r}
point <- matrix(c(-113, 37.5), ncol = 2)

terra::extract(zion_elev, point)
```

```{r}
clip <- rast(xmin = -113.3, xmax = -113, ymin = 37.2, ymax = 37.9,
             resolution = 0.3,
             vals = 1)


zion_elev_clip <- zion_elev[clip, drop = FALSE]
```

```{r}
tm_shape(zion_elev) +
  tm_raster()

tm_shape(zion_elev_clip) +
  tm_raster()
```

```{r}
# cresting mask
rmask <- zion_elev

rmask[rmask < 2000] <- NA

# bracket subsetting
masked1 <- zion_elev[rmask, drop = FALSE]

masked2 <- terra::mask(zion_elev, rmask)
```

```{r}
tm_shape(zion_elev) +
  tm_raster()

tm_shape(masked1) +
  tm_raster()

tm_shape(masked2) +
  tm_raster()
```

```{r}
# can do any math to raster
zion_elev + zion_elev
log(zion_elev)

# can apply boolean logic
zion_elev > 5

# can reclassify cells
rcl <- matrix(c(1000, 1500, 1, 
                1500, 2000, 2,
                2000, 2500, 3,
                2500, 3000, 4),
              ncol = 3, byrow = TRUE)

reclassified <- terra::classify(zion_elev, rcl = rcl)
values(reclassified) <- as.factor(values(reclassified))

tm_shape(reclassified) +
  tm_raster()
```

```{r}
ndvi_fun <- function(nir, red){
  (nir - red)/(nir + red)
}
```

```{r}
ndvii_rast <- lapp(landsat[[c(4,3)]], fun = ndvi_fun)

tm_shape(ndvii_rast) +
  tm_raster()
```

```{r}
elevation_focal <- focal(zion_elev,
                         w = matrix(1, nrow = 9, ncol = 9),
                         fun = min)

tm_shape(elevation_focal) +
  tm_raster()
```

```{r}
terra::zonal(zion_elev, reclassified, fun = mean)
```

```{r}
terra::global(zion_elev, mean)
```

### Changing the extent
```{r}
extend <- terra::extend(zion_elev, c(1, 200))

extend2 <- terra::extend(zion_elev, extend)

extend + extend2
```

### Origin
```{r}
origin(zion_elev)
```

### Changing resolution
```{r}
# worsen first (aggregate)
zion_elev_worse <- terra::aggregate(zion_elev,
                                    fact = 5,
                                    fun = mean)

zion_elev_better <- terra::disagg(zion_elev_worse,
                                  fact = 5,
                                  method = "bilinear")

if(identical(zion_elev, zion_elev_better)) {
  print("match") 
}else{
  warning("don't match")
}
```

### Resampling
```{r}
target_rast <- rast(xmin = -113.2, xmax = -112.9,
                    ymin = 37.4, ymax = 37.5,
                    nrow = 450, ncol = 460,
                    crs = crs(zion_elev))

elev_resample <- terra::resample(zion_elev, target_rast, method = "bilinear")
```






